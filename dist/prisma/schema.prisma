generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            Int           @id @default(autoincrement())
  name          String        @db.VarChar(125)
  description   String        @db.VarChar(255)
  image         String[]
  price         Decimal
  category      Category      @relation(fields: [categoryId], references: [id])
  categoryId    Int
  material      String        @db.VarChar(65)
  hasDiscount   Boolean?
  discountValue Decimal?
  productsSold  ProductSold[]
  provider      String        @db.VarChar(65)

  @@map("Products")
}

model Category {
  id       Int       @id @default(autoincrement())
  products Product[]
  name     String    @unique @db.VarChar(125)

  @@map("Categories")
}

model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique @db.VarChar(125)
  name       String       @db.VarChar(125)
  lastName   String       @db.VarChar(125)
  hash       String       @db.VarChar(255)
  cpf        String?      @db.VarChar(125)
  token      String?      @db.VarChar(125)
  active     Boolean      @default(true)
  purchases  Sale[]
  userAdress UserAdress[]
  userCard   UserCard[]

  @@map("Users")
}

model UserAdress {
  user     User   @relation(fields: [userId], references: [id])
  userId   Int    @id
  adress   String @db.VarChar(125)
  district String @db.VarChar(65)
  city     String @db.VarChar(125)
  state    String @db.VarChar(65)

  @@map("UserAdresses")
}

model UserCard {
  user         User   @relation(fields: [userId], references: [id])
  userId       Int    @id
  cardNumber   String @db.VarChar(16)
  cardName     String @db.VarChar(125)
  cardValidity String @db.VarChar(5)
  cpf          String @db.VarChar(125)

  @@map("UserCards")
}

model Sale {
  id           Int           @id @default(autoincrement())
  user         User          @relation(fields: [userId], references: [id])
  userId       Int
  productsSold ProductSold[]
  payMethod    PayMethod     @relation(fields: [payMethodId], references: [id])
  payMethodId  Int
  createdAt    DateTime      @default(now())

  @@map("Sales")
}

model PayMethod {
  id    Int     @id @default(autoincrement())
  name  String? @unique @db.VarChar(125)
  sales Sale[]

  @@map("PayMethods")
}

model ProductSold {
  sale      Sale    @relation(fields: [saleId], references: [id])
  saleId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int

  @@id([saleId, productId])
  @@map("ProductsSold")
}
